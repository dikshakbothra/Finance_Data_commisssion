setwd("F:/DIKSHA/Rfossee/Finance_commission_dataset_07-06-2019")
library(knitr)
block<-read.csv("blocks.csv",header = TRUE)
block[4]
block$Received=round(block$Received/10000000,digits=2)
block[4]
block[5]
library(knitr)
block<-read.csv("blocks.csv",header = TRUE)
block<-data.frame(block)
library(knitr)
block<-read.csv("blocks.csv",header = TRUE)
block<-data.frame(block)
block$Received_in_Crores=round(block$Received_in_Crores/10000000,digits=2)
block$Spent_in_Crores=round(block$Spent_in_Crores/10000000,digits=2)
kable(block[,c(1:2,4:6)],caption="Blocks in Ranchi District" )
library(forecast)
library(Metrics)
# reading data
#data = read.csv("international-airline-passengers.csv")
data("AirPassengers")
data <- AirPassengers
# splitting data into train and valid sets
train = data[1:100]
valid = data[101:length(data)]
# removing "Month" column
train$Month = NULL
# training model
model = auto.arima(train,D=1)
# model summary
summary(model)
# forecasting
forecast = predict(model,44)
# evaluation
rmse(valid$International.airline.passengers, forecast$pred)
library(ggfortify)
library(AirPassengers)
library(ggfortify)
library(tseries)
library(forecast)
data(AirPassengers)
AP <- AirPassengers
# Take a look at the class of the dataset AirPassengers
class(AP)
frequency(AP)
cycle(AP)
summary(AP)
plot(AP,xlab="Date", ylab = "Passenger numbers (1000's)",main="Air Passenger numbers from 1949 to 1961")
autoplot(AP) + labs(x ="Date", y = "Passenger numbers (1000's)", title="Air Passengers from 1949 to 1961")
boxplot(AP~cycle(AP),xlab="Date", ylab = "Passenger Numbers (1000's)" ,main ="Monthly Air Passengers Boxplot from 1949 to 1961")
decomposeAP <- decompose(AP,"multiplicative")
autoplot(decomposeAP)
adf.test(AP)
autoplot(acf(AP,plot=FALSE))+ labs(title="Correlogram
of Air Passengers from 1949 to 1961")
decomposeAP$random
autoplot(acf(decomposeAP$random[7:138],
plot=FALSE))+ labs(title="Correlogram of Air Passengers
Random Component from 1949 to 1961")
autoplot(AP) + geom_smooth(method="lm")+ labs(x ="Date",
y = "Passenger numbers (1000's)",
title="Air Passengers from 1949
to 1961")
arimaAP <- auto.arima(AP)
arimaAP
ggtsdiag(arimaAP)
forecastAP <- forecast(arimaAP, level = c(95), h = 36)
autoplot(forecastAP)
##Finally we can plot a forecast of the time series using the forecast function,
##Finally we can plot a forecast of the time series using the forecast function,
##again from the forecast R package, with a 95% confidence interval where h is
##Finally we can plot a forecast of the time series using the forecast function,
##again from the forecast R package, with a 95% confidence interval where h is
##the forecast horizon periods in months
##Finally we can plot a forecast of the time series using the forecast function,
##again from the forecast R package, with a 95% confidence interval where h is
##the forecast horizon periods in months
data("AirPassengers")
AP <- AirPassengers
plot(AP, ylab="Passengers (1000s)", type="o", pch =20)
#Decomposing the data into its trend, seasonal, and random error components will
#give some idea how these components relate to the observed dataset.
AP.decompM <- decompose(AP, type = "multiplicative")
plot(AP.decompM)
t <- seq(1, 144, 1)
modelTrend <- lm(formula = AP.decompM$trend ~ t)
predT <- predict.lm(modelTrend, newdata = data.frame(t))
plot(AP.decompM$trend[7:138] ~ t[7:138], ylab="T(t)", xlab="t",
type="p", pch=20, main = "Trend Component: Modelled vs Observed")
lines(predT, col="red")
plot(density(AP.decompM$random[7:138]),
main="Random Error") #Values 1:6 & 139:44 are NA
mean(AP.decompM$random[7:138])
Data1961 <- data.frame("T" = 2.667*seq(145, 156, 1) + 84.648, S=rep(0,12), e=rep(0,12),
row.names = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
Data1961
Data1961$e <- 1
Data1961
library(ggfortify)
library(tseries)
library(forecast)
data(AirPassengers)
